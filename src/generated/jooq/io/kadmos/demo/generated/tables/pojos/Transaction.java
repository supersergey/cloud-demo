/*
 * This file is generated by jOOQ.
 */
package io.kadmos.demo.generated.tables.pojos;


import java.io.Serializable;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Transaction implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long           id;
    private final UUID           accountId;
    private final OffsetDateTime createdAt;
    private final BigDecimal     openingBalance;
    private final BigDecimal     amount;

    public Transaction(Transaction value) {
        this.id = value.id;
        this.accountId = value.accountId;
        this.createdAt = value.createdAt;
        this.openingBalance = value.openingBalance;
        this.amount = value.amount;
    }

    public Transaction(
        Long           id,
        UUID           accountId,
        OffsetDateTime createdAt,
        BigDecimal     openingBalance,
        BigDecimal     amount
    ) {
        this.id = id;
        this.accountId = accountId;
        this.createdAt = createdAt;
        this.openingBalance = openingBalance;
        this.amount = amount;
    }

    /**
     * Getter for <code>main.transaction.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>main.transaction.account_id</code>.
     */
    public UUID getAccountId() {
        return this.accountId;
    }

    /**
     * Getter for <code>main.transaction.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>main.transaction.opening_balance</code>.
     */
    public BigDecimal getOpeningBalance() {
        return this.openingBalance;
    }

    /**
     * Getter for <code>main.transaction.amount</code>.
     */
    public BigDecimal getAmount() {
        return this.amount;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Transaction (");

        sb.append(id);
        sb.append(", ").append(accountId);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(openingBalance);
        sb.append(", ").append(amount);

        sb.append(")");
        return sb.toString();
    }
}
